<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="init_8cpp" kind="file" language="C++">
    <compoundname>init.cpp</compoundname>
    <includes local="no">unistd.h</includes>
    <includes local="no">actionlib/client/simple_action_client.h</includes>
    <includes local="no">actionlib/client/terminal_state.h</includes>
    <includes local="no">ros/ros.h</includes>
    <includes local="no">moveit/move_group_interface/move_group_interface.h</includes>
    <includes local="no">moveit/robot_model_loader/robot_model_loader.h</includes>
    <includes local="no">moveit/robot_model/robot_model.h</includes>
    <includes local="no">moveit/robot_state/robot_state.h</includes>
    <includes local="no">geometry_msgs/Pose.h</includes>
    <includes local="no">moveit_msgs/GetStateValidity.h</includes>
    <includes local="no">moveit_msgs/GetPlanningScene.h</includes>
    <incdepgraph>
      <node id="4">
        <label>actionlib/client/terminal_state.h</label>
      </node>
      <node id="6">
        <label>moveit/move_group_interface/move_group_interface.h</label>
      </node>
      <node id="1">
        <label>src/init.cpp</label>
        <link refid="init_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>moveit/robot_model_loader/robot_model_loader.h</label>
      </node>
      <node id="11">
        <label>moveit_msgs/GetStateValidity.h</label>
      </node>
      <node id="2">
        <label>unistd.h</label>
      </node>
      <node id="8">
        <label>moveit/robot_model/robot_model.h</label>
      </node>
      <node id="10">
        <label>geometry_msgs/Pose.h</label>
      </node>
      <node id="3">
        <label>actionlib/client/simple_action_client.h</label>
      </node>
      <node id="5">
        <label>ros/ros.h</label>
      </node>
      <node id="9">
        <label>moveit/robot_state/robot_state.h</label>
      </node>
      <node id="12">
        <label>moveit_msgs/GetPlanningScene.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="init_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Main function of the node. </para>
        </briefdescription>
        <detaileddescription>
<para>int main(argc, argv)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of argument passed as parameters</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector of string containing each argument</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when the program ends</para>
</simplesect>
description: The main function, initializes the node, loads the arm model of the robot described with the moveit_setup_assistant, gets the &quot;arm&quot; move group to move the robotic arm and moves it in the initial_pose position </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/init.cpp" line="46" column="5" bodyfile="src/init.cpp" bodystart="46" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Node to move the arm in the correct initial position. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="author"><para>Alessio Roda </para>
</simplesect>
<simplesect kind="date"><para>October 2022</para>
</simplesect>
description: This node moves the robotic arm to the initial_pose defined with the moveit setup assistant </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************************************************************************************/</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;actionlib/client/simple_action_client.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;actionlib/client/terminal_state.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MoveIt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit/move_group_interface/move_group_interface.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit/robot_model_loader/robot_model_loader.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit/robot_model/robot_model.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit/robot_state/robot_state.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/Pose.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit_msgs/GetStateValidity.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit_msgs/GetPlanningScene.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="init_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;random_position_server&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>n;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>robot_model_loader::RobotModelLoader<sp/>robot_model_loader(</highlight><highlight class="stringliteral">&quot;robot_description&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>moveit::core::RobotModelPtr&amp;<sp/>kinematic_model<sp/>=<sp/>robot_model_loader.getModel();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Model<sp/>frame:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>kinematic_model-&gt;getModelFrame().c_str());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>moveit::core::RobotStatePtr<sp/>kinematic_state(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>moveit::core::RobotState(kinematic_model));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>kinematic_state-&gt;setToDefaultValues();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>moveit::core::JointModelGroup*<sp/>joint_model_group<sp/>=<sp/>kinematic_model-&gt;getJointModelGroup(</highlight><highlight class="stringliteral">&quot;arm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>moveit::planning_interface::MoveGroupInterface<sp/>group(</highlight><highlight class="stringliteral">&quot;arm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>joint_names<sp/>=<sp/>joint_model_group-&gt;getVariableNames();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>group.setNamedTarget(</highlight><highlight class="stringliteral">&quot;initial_pose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>group.move();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/init.cpp"/>
  </compounddef>
</doxygen>
