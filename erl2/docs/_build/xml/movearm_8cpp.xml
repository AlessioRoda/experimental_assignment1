<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="movearm_8cpp" kind="file" language="C++">
    <compoundname>movearm.cpp</compoundname>
    <includes local="yes">erl2/movearm.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">actionlib/client/simple_action_client.h</includes>
    <includes local="no">actionlib/client/terminal_state.h</includes>
    <includes local="no">ros/ros.h</includes>
    <includes local="no">moveit/move_group_interface/move_group_interface.h</includes>
    <includes local="no">moveit/robot_model_loader/robot_model_loader.h</includes>
    <includes local="no">moveit/robot_model/robot_model.h</includes>
    <includes local="no">moveit/robot_state/robot_state.h</includes>
    <includes local="no">geometry_msgs/Pose.h</includes>
    <includes local="no">moveit_msgs/GetStateValidity.h</includes>
    <includes local="no">moveit_msgs/GetPlanningScene.h</includes>
    <incdepgraph>
      <node id="5">
        <label>actionlib/client/terminal_state.h</label>
      </node>
      <node id="2">
        <label>erl2/movearm.h</label>
      </node>
      <node id="1">
        <label>src/movearm.cpp</label>
        <link refid="movearm_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>moveit/move_group_interface/move_group_interface.h</label>
      </node>
      <node id="8">
        <label>moveit/robot_model_loader/robot_model_loader.h</label>
      </node>
      <node id="12">
        <label>moveit_msgs/GetStateValidity.h</label>
      </node>
      <node id="3">
        <label>unistd.h</label>
      </node>
      <node id="9">
        <label>moveit/robot_model/robot_model.h</label>
      </node>
      <node id="11">
        <label>geometry_msgs/Pose.h</label>
      </node>
      <node id="4">
        <label>actionlib/client/simple_action_client.h</label>
      </node>
      <node id="6">
        <label>ros/ros.h</label>
      </node>
      <node id="10">
        <label>moveit/robot_state/robot_state.h</label>
      </node>
      <node id="13">
        <label>moveit_msgs/GetPlanningScene.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespace_k_c_l__rosplan">KCL_rosplan</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="movearm_8cpp_1a525335710b53cb064ca56b936120431e" prot="public" static="no">
        <name>_USE_MATH_DEFINES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/movearm.cpp" line="32" column="9" bodyfile="src/movearm.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="movearm_8cpp_1aa786921102be9dc936a971f736bf069e" prot="public" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient validity_service</definition>
        <argsstring></argsstring>
        <name>validity_service</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/movearm.cpp" line="35" column="20" bodyfile="src/movearm.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="movearm_8cpp_1a26969c8ee16b235db0c1ee52d9188c8f" prot="public" static="no" mutable="no">
        <type>ros::ServiceClient</type>
        <definition>ros::ServiceClient planning_scene_service</definition>
        <argsstring></argsstring>
        <name>planning_scene_service</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/movearm.cpp" line="37" column="20" bodyfile="src/movearm.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="movearm_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Main function of the node. </para>
        </briefdescription>
        <detaileddescription>
<para>int main(argc, argv)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of argument passed as parameters</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector of string containing each argument</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 when the program ends</para>
</simplesect>
description: The main function, initializes the client for the /check_state_validity and /get_planning_scene services, declares the MovearmActionInterface and runs it </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/movearm.cpp" line="104" column="5" bodyfile="src/movearm.cpp" bodystart="104" bodyend="115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Node to perform the movearm action of the PDDL domain. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="author"><para>Alessio Roda </para>
</simplesect>
<simplesect kind="date"><para>October 2022</para>
</simplesect>
description: This node implements the ROSPlan MovearmActionInterface: the corresponding behaviour for the movearm action in the PDDl file </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************************************************************************************/</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor">#include<sp/>&quot;erl2/movearm.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;actionlib/client/simple_action_client.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;actionlib/client/terminal_state.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MoveIt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit/move_group_interface/move_group_interface.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit/robot_model_loader/robot_model_loader.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit/robot_model/robot_model.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit/robot_state/robot_state.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/Pose.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit_msgs/GetStateValidity.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moveit_msgs/GetPlanningScene.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_USE_MATH_DEFINES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//Initialize<sp/>the<sp/>/check_state_validity<sp/>ServiceClient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">ros::ServiceClient<sp/>validity_service;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//Initialize<sp/>the<sp/>/get_planning_scene<sp/>ServiceClient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">ros::ServiceClient<sp/>planning_scene_service;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">KCL_rosplan<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>MovearmActionInterface::MovearmActionInterface(ros::NodeHandle<sp/>&amp;nh)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MovearmActionInterface::concreteCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rosplan_dispatch_msgs::ActionDispatch::ConstPtr&amp;<sp/>msg)<sp/>{<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>robot_model_loader::RobotModelLoader<sp/>robot_model_loader(</highlight><highlight class="stringliteral">&quot;robot_description&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>moveit::core::RobotModelPtr&amp;<sp/>kinematic_model<sp/>=<sp/>robot_model_loader.getModel();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Model<sp/>frame:<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>kinematic_model-&gt;getModelFrame().c_str());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveit::core::RobotStatePtr<sp/>kinematic_state(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>moveit::core::RobotState(kinematic_model));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kinematic_state-&gt;setToDefaultValues();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>moveit::core::JointModelGroup*<sp/>joint_model_group<sp/>=<sp/>kinematic_model-&gt;getJointModelGroup(</highlight><highlight class="stringliteral">&quot;arm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moveit::planning_interface::MoveGroupInterface<sp/>group(</highlight><highlight class="stringliteral">&quot;arm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>joint_names<sp/>=<sp/>joint_model_group-&gt;getVariableNames();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group.setNamedTarget(</highlight><highlight class="stringliteral">&quot;initial_pose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group.move();<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group.setNamedTarget(</highlight><highlight class="stringliteral">&quot;reach_target&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group.move();<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group.setNamedTarget(</highlight><highlight class="stringliteral">&quot;initial_pose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group.move();<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROS_INFO(</highlight><highlight class="stringliteral">&quot;Action<sp/>(%s)<sp/>performed:<sp/>completed!&quot;</highlight><highlight class="normal">,<sp/>msg-&gt;name.c_str());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="movearm_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;movearm_action&quot;</highlight><highlight class="normal">,<sp/>ros::init_options::AnonymousName);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh(</highlight><highlight class="stringliteral">&quot;~&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validity_service=nh.serviceClient&lt;moveit_msgs::GetStateValidity&gt;(</highlight><highlight class="stringliteral">&quot;/check_state_validity&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>planning_scene_service=nh.serviceClient&lt;moveit_msgs::GetPlanningScene&gt;(</highlight><highlight class="stringliteral">&quot;/get_planning_scene&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::AsyncSpinner<sp/>spinner(1);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spinner.start();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KCL_rosplan::MovearmActionInterface<sp/>my_aci(nh);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>my_aci.runActionInterface();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
    </programlisting>
    <location file="src/movearm.cpp"/>
  </compounddef>
</doxygen>
