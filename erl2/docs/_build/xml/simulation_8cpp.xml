<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="simulation_8cpp" kind="file" language="C++">
    <compoundname>simulation.cpp</compoundname>
    <includes local="no">ros/ros.h</includes>
    <includes local="no">gazebo_msgs/LinkStates.h</includes>
    <includes local="no">visualization_msgs/MarkerArray.h</includes>
    <includes local="no">erl2/ErlOracle.h</includes>
    <includes local="no">erl2/Oracle.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="4">
        <label>visualization_msgs/MarkerArray.h</label>
      </node>
      <node id="8">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>erl2/ErlOracle.h</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
      <node id="2">
        <label>ros/ros.h</label>
      </node>
      <node id="9">
        <label>time.h</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>erl2/Oracle.h</label>
      </node>
      <node id="3">
        <label>gazebo_msgs/LinkStates.h</label>
      </node>
      <node id="1">
        <label>src/simulation.cpp</label>
        <link refid="simulation_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="simulation_8cpp_1a32812fe000700d7aa8988d74e59471c7" prot="public" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher oracle_pub</definition>
        <argsstring></argsstring>
        <name>oracle_pub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="12" column="16" bodyfile="src/simulation.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="simulation_8cpp_1a36b0204cd96e3dc326a2adfa3d1dceda" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double markx[4]</definition>
        <argsstring>[4]</argsstring>
        <name>markx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="14" column="8" bodyfile="src/simulation.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="simulation_8cpp_1a0bc4146f286fe42bd5e8fa1e53826447" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double marky[4]</definition>
        <argsstring>[4]</argsstring>
        <name>marky</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="15" column="8" bodyfile="src/simulation.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="simulation_8cpp_1a8d90002e6a9c50028f184b22c380efc4" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double markz[4]</definition>
        <argsstring>[4]</argsstring>
        <name>markz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="16" column="8" bodyfile="src/simulation.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="simulation_8cpp_1a412ed4d68a81f370cdcd20e3019db982" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double lastmarkx</definition>
        <argsstring></argsstring>
        <name>lastmarkx</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="18" column="8" bodyfile="src/simulation.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="simulation_8cpp_1a174c0dfc727a92493b03f7b0573f4f3e" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double lastmarky</definition>
        <argsstring></argsstring>
        <name>lastmarky</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="19" column="8" bodyfile="src/simulation.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="simulation_8cpp_1a0049a8a39c319bf1470f36c9e0f75abd" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string key[3]</definition>
        <argsstring>[3]</argsstring>
        <name>key</name>
        <initializer>= {&quot;who&quot;, &quot;what&quot;, &quot;where&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="21" column="19" bodyfile="src/simulation.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="simulation_8cpp_1a68fa6a0c7a1208892294604263e23d92" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string person[6]</definition>
        <argsstring>[6]</argsstring>
        <name>person</name>
        <initializer>= {&quot;missScarlett&quot;, &quot;colonelMustard&quot;, &quot;mrsWhite&quot;, &quot;mrGreen&quot;, &quot;mrsPeacock&quot;, &quot;profPlum&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="22" column="19" bodyfile="src/simulation.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="simulation_8cpp_1a4368e40a20e72e62974037baf19dba80" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string object[6]</definition>
        <argsstring>[6]</argsstring>
        <name>object</name>
        <initializer>= {&quot;candlestick&quot;, &quot;dagger&quot;, &quot;leadPipe&quot;, &quot;revolver&quot;, &quot;rope&quot;, &quot;spanner&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="23" column="19" bodyfile="src/simulation.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="simulation_8cpp_1a5e5bd50ead53d20df3f8ede527f47ce7" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string place[9]</definition>
        <argsstring>[9]</argsstring>
        <name>place</name>
        <initializer>= {&quot;conservatory&quot;, &quot;lounge&quot;, &quot;kitchen&quot;, &quot;library&quot;, &quot;hall&quot;, &quot;study&quot;, &quot;bathroom&quot;, &quot;diningRoom&quot;, &quot;billiardRoom&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="24" column="19" bodyfile="src/simulation.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="simulation_8cpp_1a37d4a0b625b8b9583adf9362f5aae971" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int uIDs[3]</definition>
        <argsstring>[3]</argsstring>
        <name>uIDs</name>
        <initializer>={-1,-1,-1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="26" column="5" bodyfile="src/simulation.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="simulation_8cpp_1a90c5d03e068ddae91702223f47eff712" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int winID</definition>
        <argsstring></argsstring>
        <name>winID</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="27" column="5" bodyfile="src/simulation.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="simulation_8cpp_1ac8241cdb5162da1999f5377e7e209201" prot="public" static="no" mutable="no">
        <type>std::vector&lt; erl2::ErlOracle &gt;</type>
        <definition>std::vector&lt;erl2::ErlOracle&gt; oracle_msgs</definition>
        <argsstring></argsstring>
        <name>oracle_msgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="29" column="13" bodyfile="src/simulation.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="simulation_8cpp_1a7e333af55a708cf53de07126dcd3006b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double distfromtarget</definition>
        <argsstring>(double x, double y, double z, double x1, double y1, double z1)</argsstring>
        <name>distfromtarget</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="31" column="8" bodyfile="src/simulation.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="simulation_8cpp_1ae1a3f65d934a3c4a938e85d5071dfaa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool oracleService</definition>
        <argsstring>(erl2::Oracle::Request &amp;req, erl2::Oracle::Response &amp;res)</argsstring>
        <name>oracleService</name>
        <param>
          <type>erl2::Oracle::Request &amp;</type>
          <declname>req</declname>
        </param>
        <param>
          <type>erl2::Oracle::Response &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="37" column="6" bodyfile="src/simulation.cpp" bodystart="37" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="simulation_8cpp_1a876a1245db85a2bb87c08ae086f1eafa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void oracleCallback</definition>
        <argsstring>(const gazebo_msgs::LinkStates::ConstPtr &amp;msg)</argsstring>
        <name>oracleCallback</name>
        <param>
          <type>const gazebo_msgs::LinkStates::ConstPtr &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="43" column="6" bodyfile="src/simulation.cpp" bodystart="43" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="simulation_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/simulation.cpp" line="102" column="5" bodyfile="src/simulation.cpp" bodystart="102" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gazebo_msgs/LinkStates.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;visualization_msgs/MarkerArray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;erl2/ErlOracle.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;erl2/Oracle.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">ros::Publisher<sp/>oracle_pub;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>markx[4];</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>marky[4];</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>markz[4];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastmarkx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastmarky<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>key[3]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;who&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;what&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;where&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>person[6]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;missScarlett&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;colonelMustard&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mrsWhite&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mrGreen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mrsPeacock&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;profPlum&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[6]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;candlestick&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dagger&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;leadPipe&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;revolver&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rope&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;spanner&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>place[9]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;conservatory&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lounge&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;kitchen&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;library&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hall&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;study&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bathroom&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;diningRoom&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;billiardRoom&quot;</highlight><highlight class="normal">};<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uIDs[3]={-1,-1,-1};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>winID<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal">std::vector&lt;erl2::ErlOracle&gt;<sp/>oracle_msgs;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distfromtarget<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>z1){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>sqrt((x-x1)*(x-x1)+(y-y1)*(y-y1)+(z-z1)*(z-z1));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>oracleService(erl2::Oracle::Request<sp/>&amp;req,<sp/>erl2::Oracle::Response<sp/>&amp;res)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res.ID<sp/>=<sp/>winID;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>oracleCallback(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gazebo_msgs::LinkStates::ConstPtr&amp;<sp/>msg)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;<sp/>msg-&gt;name.size();<sp/>i++){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg-&gt;name[i].find(</highlight><highlight class="stringliteral">&quot;cluedo_link&quot;</highlight><highlight class="normal">)!=<sp/>std::string::npos){</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;4;j++){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((distfromtarget(msg-&gt;pose[i].position.x,<sp/>msg-&gt;pose[i].position.y,<sp/>msg-&gt;pose[i].position.z,<sp/>markx[j],marky[j],markz[j])&lt;0.25)<sp/>&amp;&amp;<sp/>((lastmarkx<sp/>!=markx[j])<sp/>||<sp/>(lastmarky<sp/>!=<sp/>marky[j]))){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>erl2::ErlOracle<sp/>oracle_msg;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.ID<sp/>=<sp/>rand()<sp/>%<sp/>6;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rand()%4==1){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>rand()%5;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a==0){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.key<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a==1){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.key=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.value=person[rand()%6];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a==2){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.key=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.value=</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[rand()%6];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a==3){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.key=</highlight><highlight class="stringliteral">&quot;when&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.value=</highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a==4){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.key=</highlight><highlight class="stringliteral">&quot;who&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.value=</highlight><highlight class="stringliteral">&quot;-1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.key<sp/>=<sp/>key[rand()%3];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>existing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k=0;<sp/>k&lt;oracle_msgs.size();k++){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((oracle_msg.ID<sp/>==<sp/>oracle_msgs[k].ID)&amp;&amp;(oracle_msg.key<sp/>==<sp/>oracle_msgs[k].key)){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.value<sp/>=<sp/>oracle_msgs[k].value;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>existing<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!existing)<sp/>||<sp/>(std::find(std::begin(uIDs),<sp/>std::end(uIDs),<sp/>oracle_msg.ID)<sp/>!=<sp/>std::end(uIDs))){<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oracle_msg.key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;who&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.value<sp/>=<sp/>person[rand()%6];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oracle_msg.key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;what&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.value<sp/>=<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[rand()%6];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oracle_msg.key<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;where&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msg.value<sp/>=<sp/>place[rand()%9];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_msgs.push_back(oracle_msg);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oracle_pub.publish(oracle_msg);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastmarkx<sp/>=<sp/>markx[j];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastmarky<sp/>=<sp/>marky[j];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="check__consistency_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;assignment2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">ros::NodeHandle<sp/>nh;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">ros::Publisher<sp/>vis_pub<sp/>=<sp/>nh.advertise&lt;visualization_msgs::MarkerArray&gt;(<sp/></highlight><highlight class="stringliteral">&quot;/visualization_marker&quot;</highlight><highlight class="normal">,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">oracle_pub<sp/>=<sp/>nh.advertise&lt;erl2::ErlOracle&gt;(<sp/></highlight><highlight class="stringliteral">&quot;/oracle_hint&quot;</highlight><highlight class="normal">,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">ros::ServiceServer<sp/>service=<sp/>nh.advertiseService(</highlight><highlight class="stringliteral">&quot;/oracle_solution&quot;</highlight><highlight class="normal">,<sp/>oracleService);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">ros::Subscriber<sp/>sub<sp/>=<sp/>nh.subscribe(</highlight><highlight class="stringliteral">&quot;/gazebo/link_states&quot;</highlight><highlight class="normal">,<sp/>10,<sp/>oracleCallback);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">visualization_msgs::MarkerArray<sp/>markers;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">srand<sp/>(time(NULL));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zpos[2]<sp/>=<sp/>{0.75,<sp/>1.25};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RandIndex;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">visualization_msgs::Marker<sp/>marker;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">marker.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;odom&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">marker.header.stamp<sp/>=<sp/>ros::Time();</highlight></codeline>
<codeline lineno="120"><highlight class="normal">marker.id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">marker.type<sp/>=<sp/>visualization_msgs::Marker::SPHERE;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">marker.action<sp/>=<sp/>visualization_msgs::Marker::ADD;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">marker.pose.position.x<sp/>=<sp/>-3.0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">markx[0]=-3.0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">marker.pose.position.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">marky[0]=0.0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">RandIndex<sp/>=<sp/>rand()<sp/>%<sp/>2;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">marker.pose.position.z<sp/>=<sp/>zpos[RandIndex];</highlight></codeline>
<codeline lineno="129"><highlight class="normal">markz[0]=marker.pose.position.z;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">marker.pose.orientation.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">marker.pose.orientation.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">marker.pose.orientation.z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">marker.pose.orientation.w<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">marker.scale.x<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">marker.scale.y<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">marker.scale.z<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">marker.color.a<sp/>=<sp/>1.0;<sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal">marker.color.r<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">marker.color.g<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">marker.color.b<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">markers.markers.push_back(marker);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">marker.id<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">marker.pose.position.x<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">markx[1]=3.0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">marker.pose.position.y<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">marky[1]=0.0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">RandIndex<sp/>=<sp/>rand()<sp/>%<sp/>2;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">marker.pose.position.z<sp/>=<sp/>zpos[RandIndex];</highlight></codeline>
<codeline lineno="150"><highlight class="normal">markz[1]=marker.pose.position.z;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">markers.markers.push_back(marker);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">marker.id<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">marker.pose.position.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">markx[2]=0.0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">marker.pose.position.y<sp/>=<sp/>-3.0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">marky[2]=-3.0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">RandIndex<sp/>=<sp/>rand()<sp/>%<sp/>2;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">marker.pose.position.z<sp/>=<sp/>zpos[RandIndex];</highlight></codeline>
<codeline lineno="160"><highlight class="normal">markz[2]=marker.pose.position.z;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">markers.markers.push_back(marker);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">marker.id<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">marker.pose.position.x<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">markx[3]=0.0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">marker.pose.position.y<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">marky[3]=3.0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">RandIndex<sp/>=<sp/>rand()<sp/>%<sp/>2;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">marker.pose.position.z<sp/>=<sp/>zpos[RandIndex];</highlight></codeline>
<codeline lineno="170"><highlight class="normal">markz[3]=marker.pose.position.z;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">markers.markers.push_back(marker);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uid;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++){<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/>=<sp/>rand()%6;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++<sp/>){</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(uid<sp/>==<sp/>uIDs[i]<sp/>){</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(uid<sp/>==<sp/>-1);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==3){</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>winID<sp/>=<sp/>uid;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>uIDs[i]<sp/>=<sp/>uid;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ros::ok()){</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>vis_pub.publish(markers);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::spinOnce();</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">ros::shutdown();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/simulation.cpp"/>
  </compounddef>
</doxygen>
